version: '3'

services:
  nginx:
    build:
      context: ./docker/images/nginx
      dockerfile: Dockerfile
      args:
        UID: $UID
        GUID: $GUID
    links:
      - php
    ports:
      - $PORT:80
    volumes:
      - "./src/frontend:/app"
      - "./volumes/logs/nginx:/var/log/nginx"
      - "./src/backend:/var/www/site"

  php:
    build:
      context: ./docker/images/php
      dockerfile: Dockerfile
      args:
        UID: $UID
        GUID: $GUID
    links:
      - db
    expose:
      - "9000"
    volumes:
      - "./src/backend:/var/www/site"
    depends_on:
      - rabbitmq
    environment:
      # ifconfig | grep 'inet 192'| awk '{ print $2}'
      # XDEBUG_CONFIG: "remote_host=192.168.122.1 remote_enable=1 remote_port=9001 remote_connect_back=0 profiler_enable=0 remote_autostart=1"
      PHP_IDE_CONFIG: "serverName=docker"
    dns: 8.8.8.8

  db:
    build:
      context: ./docker/images/postgres
      dockerfile: Dockerfile
    expose:
      - "5432"
    ports:
      - $DB_PORT:5432
    volumes:
      - "./volumes/postgresql/data:/var/lib/postgresql/data/pgdata"
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASS

  mailhog:
    image: mailhog/mailhog
    ports:
      - ${MAILHOG_PORT:-1025}:1025
      - ${MAILHOG_PORT:-8025}:8025
    security_opt:
      - apparmor:unconfined

  redis:
    image: redis:4.0.2
    hostname: redis
    volumes:
      - "./volumes/redis:/data"

  rabbitmq:
    build:
      context: ./docker/images/rabbitmq
    volumes:
      - "./volumes/rabbitmq:/var/lib/rabbitmq:cached"
    #    ports:
    #      - ${RABBIT_PORT:-15672}:15672
    environment:
      - RABBITMQ_DEFAULT_USER=devuser
      - RABBITMQ_DEFAULT_PASS=devpass
      - RABBITMQ_DEFAULT_VHOST=devhost